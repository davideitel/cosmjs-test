import*as t from"long";import*as e from"protobufjs/minimal";import s from"../../base/v1beta1/coin.js";import n from"./bank.js";var o="default"in t?t.default:t;var r="default"in e?e.default:e;var d={};var u=d&&d.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(d,"__esModule",{value:true});d.MsgClientImpl=d.MsgMultiSendResponse=d.MsgMultiSend=d.MsgSendResponse=d.MsgSend=d.protobufPackage=void 0;const i=u(o);const a=u(r);const l=s;const c=n;d.protobufPackage="cosmos.bank.v1beta1";const p={fromAddress:"",toAddress:""};d.MsgSend={encode(t,e=a.default.Writer.create()){""!==t.fromAddress&&e.uint32(10).string(t.fromAddress);""!==t.toAddress&&e.uint32(18).string(t.toAddress);for(const s of t.amount)l.Coin.encode(s,e.uint32(26).fork()).ldelim();return e},decode(t,e){const s=t instanceof a.default.Reader?t:new a.default.Reader(t);let n=void 0===e?s.len:s.pos+e;const o=Object.assign({},p);o.amount=[];while(s.pos<n){const t=s.uint32();switch(t>>>3){case 1:o.fromAddress=s.string();break;case 2:o.toAddress=s.string();break;case 3:o.amount.push(l.Coin.decode(s,s.uint32()));break;default:s.skipType(7&t);break}}return o},fromJSON(t){var e;const s=Object.assign({},p);s.fromAddress=void 0!==t.fromAddress&&null!==t.fromAddress?String(t.fromAddress):"";s.toAddress=void 0!==t.toAddress&&null!==t.toAddress?String(t.toAddress):"";s.amount=(null!==(e=t.amount)&&void 0!==e?e:[]).map((t=>l.Coin.fromJSON(t)));return s},toJSON(t){const e={};void 0!==t.fromAddress&&(e.fromAddress=t.fromAddress);void 0!==t.toAddress&&(e.toAddress=t.toAddress);t.amount?e.amount=t.amount.map((t=>t?l.Coin.toJSON(t):void 0)):e.amount=[];return e},fromPartial(t){var e,s,n;const o=Object.assign({},p);o.fromAddress=null!==(e=t.fromAddress)&&void 0!==e?e:"";o.toAddress=null!==(s=t.toAddress)&&void 0!==s?s:"";o.amount=(null===(n=t.amount)||void 0===n?void 0:n.map((t=>l.Coin.fromPartial(t))))||[];return o}};const f={};d.MsgSendResponse={encode(t,e=a.default.Writer.create()){return e},decode(t,e){const s=t instanceof a.default.Reader?t:new a.default.Reader(t);let n=void 0===e?s.len:s.pos+e;const o=Object.assign({},f);while(s.pos<n){const t=s.uint32();switch(t>>>3){default:s.skipType(7&t);break}}return o},fromJSON(t){const e=Object.assign({},f);return e},toJSON(t){const e={};return e},fromPartial(t){const e=Object.assign({},f);return e}};const m={};d.MsgMultiSend={encode(t,e=a.default.Writer.create()){for(const s of t.inputs)c.Input.encode(s,e.uint32(10).fork()).ldelim();for(const s of t.outputs)c.Output.encode(s,e.uint32(18).fork()).ldelim();return e},decode(t,e){const s=t instanceof a.default.Reader?t:new a.default.Reader(t);let n=void 0===e?s.len:s.pos+e;const o=Object.assign({},m);o.inputs=[];o.outputs=[];while(s.pos<n){const t=s.uint32();switch(t>>>3){case 1:o.inputs.push(c.Input.decode(s,s.uint32()));break;case 2:o.outputs.push(c.Output.decode(s,s.uint32()));break;default:s.skipType(7&t);break}}return o},fromJSON(t){var e,s;const n=Object.assign({},m);n.inputs=(null!==(e=t.inputs)&&void 0!==e?e:[]).map((t=>c.Input.fromJSON(t)));n.outputs=(null!==(s=t.outputs)&&void 0!==s?s:[]).map((t=>c.Output.fromJSON(t)));return n},toJSON(t){const e={};t.inputs?e.inputs=t.inputs.map((t=>t?c.Input.toJSON(t):void 0)):e.inputs=[];t.outputs?e.outputs=t.outputs.map((t=>t?c.Output.toJSON(t):void 0)):e.outputs=[];return e},fromPartial(t){var e,s;const n=Object.assign({},m);n.inputs=(null===(e=t.inputs)||void 0===e?void 0:e.map((t=>c.Input.fromPartial(t))))||[];n.outputs=(null===(s=t.outputs)||void 0===s?void 0:s.map((t=>c.Output.fromPartial(t))))||[];return n}};const g={};d.MsgMultiSendResponse={encode(t,e=a.default.Writer.create()){return e},decode(t,e){const s=t instanceof a.default.Reader?t:new a.default.Reader(t);let n=void 0===e?s.len:s.pos+e;const o=Object.assign({},g);while(s.pos<n){const t=s.uint32();switch(t>>>3){default:s.skipType(7&t);break}}return o},fromJSON(t){const e=Object.assign({},g);return e},toJSON(t){const e={};return e},fromPartial(t){const e=Object.assign({},g);return e}};class MsgClientImpl{constructor(t){this.rpc=t;this.Send=this.Send.bind(this);this.MultiSend=this.MultiSend.bind(this)}Send(t){const e=d.MsgSend.encode(t).finish();const s=this.rpc.request("cosmos.bank.v1beta1.Msg","Send",e);return s.then((t=>d.MsgSendResponse.decode(new a.default.Reader(t))))}MultiSend(t){const e=d.MsgMultiSend.encode(t).finish();const s=this.rpc.request("cosmos.bank.v1beta1.Msg","MultiSend",e);return s.then((t=>d.MsgMultiSendResponse.decode(new a.default.Reader(t))))}}d.MsgClientImpl=MsgClientImpl;if(a.default.util.Long!==i.default){a.default.util.Long=i.default;a.default.configure()}const S=d.__esModule,M=d.MsgMultiSendResponse,b=d.MsgMultiSend,v=d.MsgSendResponse,O=d.MsgSend,A=d.protobufPackage;const h=d.MsgClientImpl;export{h as MsgClientImpl,b as MsgMultiSend,M as MsgMultiSendResponse,O as MsgSend,v as MsgSendResponse,S as __esModule,d as default,A as protobufPackage};

