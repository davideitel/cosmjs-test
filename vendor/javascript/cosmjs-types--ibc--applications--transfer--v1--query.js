import*as e from"long";import*as n from"protobufjs/minimal";import a from"../../../../cosmos/base/query/v1beta1/pagination.js";var t="default"in e?e.default:e;var r="default"in n?n.default:n;var o={};var s=o&&o.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(o,"__esModule",{value:true});o.Params=o.DenomTrace=o.FungibleTokenPacketData=o.protobufPackage=void 0;const i=s(t);const d=s(r);o.protobufPackage="ibc.applications.transfer.v1";const c={denom:"",amount:i.default.UZERO,sender:"",receiver:""};o.FungibleTokenPacketData={encode(e,n=d.default.Writer.create()){""!==e.denom&&n.uint32(10).string(e.denom);e.amount.isZero()||n.uint32(16).uint64(e.amount);""!==e.sender&&n.uint32(26).string(e.sender);""!==e.receiver&&n.uint32(34).string(e.receiver);return n},decode(e,n){const a=e instanceof d.default.Reader?e:new d.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},c);while(a.pos<t){const e=a.uint32();switch(e>>>3){case 1:r.denom=a.string();break;case 2:r.amount=a.uint64();break;case 3:r.sender=a.string();break;case 4:r.receiver=a.string();break;default:a.skipType(7&e);break}}return r},fromJSON(e){const n=Object.assign({},c);n.denom=void 0!==e.denom&&null!==e.denom?String(e.denom):"";n.amount=void 0!==e.amount&&null!==e.amount?i.default.fromString(e.amount):i.default.UZERO;n.sender=void 0!==e.sender&&null!==e.sender?String(e.sender):"";n.receiver=void 0!==e.receiver&&null!==e.receiver?String(e.receiver):"";return n},toJSON(e){const n={};void 0!==e.denom&&(n.denom=e.denom);void 0!==e.amount&&(n.amount=(e.amount||i.default.UZERO).toString());void 0!==e.sender&&(n.sender=e.sender);void 0!==e.receiver&&(n.receiver=e.receiver);return n},fromPartial(e){var n,a,t;const r=Object.assign({},c);r.denom=null!==(n=e.denom)&&void 0!==n?n:"";r.amount=void 0!==e.amount&&null!==e.amount?i.default.fromValue(e.amount):i.default.UZERO;r.sender=null!==(a=e.sender)&&void 0!==a?a:"";r.receiver=null!==(t=e.receiver)&&void 0!==t?t:"";return r}};const u={path:"",baseDenom:""};o.DenomTrace={encode(e,n=d.default.Writer.create()){""!==e.path&&n.uint32(10).string(e.path);""!==e.baseDenom&&n.uint32(18).string(e.baseDenom);return n},decode(e,n){const a=e instanceof d.default.Reader?e:new d.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},u);while(a.pos<t){const e=a.uint32();switch(e>>>3){case 1:r.path=a.string();break;case 2:r.baseDenom=a.string();break;default:a.skipType(7&e);break}}return r},fromJSON(e){const n=Object.assign({},u);n.path=void 0!==e.path&&null!==e.path?String(e.path):"";n.baseDenom=void 0!==e.baseDenom&&null!==e.baseDenom?String(e.baseDenom):"";return n},toJSON(e){const n={};void 0!==e.path&&(n.path=e.path);void 0!==e.baseDenom&&(n.baseDenom=e.baseDenom);return n},fromPartial(e){var n,a;const t=Object.assign({},u);t.path=null!==(n=e.path)&&void 0!==n?n:"";t.baseDenom=null!==(a=e.baseDenom)&&void 0!==a?a:"";return t}};const l={sendEnabled:false,receiveEnabled:false};o.Params={encode(e,n=d.default.Writer.create()){true===e.sendEnabled&&n.uint32(8).bool(e.sendEnabled);true===e.receiveEnabled&&n.uint32(16).bool(e.receiveEnabled);return n},decode(e,n){const a=e instanceof d.default.Reader?e:new d.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},l);while(a.pos<t){const e=a.uint32();switch(e>>>3){case 1:r.sendEnabled=a.bool();break;case 2:r.receiveEnabled=a.bool();break;default:a.skipType(7&e);break}}return r},fromJSON(e){const n=Object.assign({},l);n.sendEnabled=void 0!==e.sendEnabled&&null!==e.sendEnabled&&Boolean(e.sendEnabled);n.receiveEnabled=void 0!==e.receiveEnabled&&null!==e.receiveEnabled&&Boolean(e.receiveEnabled);return n},toJSON(e){const n={};void 0!==e.sendEnabled&&(n.sendEnabled=e.sendEnabled);void 0!==e.receiveEnabled&&(n.receiveEnabled=e.receiveEnabled);return n},fromPartial(e){var n,a;const t=Object.assign({},l);t.sendEnabled=null!==(n=e.sendEnabled)&&void 0!==n&&n;t.receiveEnabled=null!==(a=e.receiveEnabled)&&void 0!==a&&a;return t}};if(d.default.util.Long!==i.default){d.default.util.Long=i.default;d.default.configure()}var m="default"in e?e.default:e;var p="default"in n?n.default:n;var f={};var v=f&&f.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(f,"__esModule",{value:true});f.QueryClientImpl=f.QueryParamsResponse=f.QueryParamsRequest=f.QueryDenomTracesResponse=f.QueryDenomTracesRequest=f.QueryDenomTraceResponse=f.QueryDenomTraceRequest=f.protobufPackage=void 0;const b=v(m);const g=v(p);const h=o;const T=a;f.protobufPackage="ibc.applications.transfer.v1";const O={hash:""};f.QueryDenomTraceRequest={encode(e,n=g.default.Writer.create()){""!==e.hash&&n.uint32(10).string(e.hash);return n},decode(e,n){const a=e instanceof g.default.Reader?e:new g.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},O);while(a.pos<t){const e=a.uint32();switch(e>>>3){case 1:r.hash=a.string();break;default:a.skipType(7&e);break}}return r},fromJSON(e){const n=Object.assign({},O);n.hash=void 0!==e.hash&&null!==e.hash?String(e.hash):"";return n},toJSON(e){const n={};void 0!==e.hash&&(n.hash=e.hash);return n},fromPartial(e){var n;const a=Object.assign({},O);a.hash=null!==(n=e.hash)&&void 0!==n?n:"";return a}};const R={};f.QueryDenomTraceResponse={encode(e,n=g.default.Writer.create()){void 0!==e.denomTrace&&h.DenomTrace.encode(e.denomTrace,n.uint32(10).fork()).ldelim();return n},decode(e,n){const a=e instanceof g.default.Reader?e:new g.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},R);while(a.pos<t){const e=a.uint32();switch(e>>>3){case 1:r.denomTrace=h.DenomTrace.decode(a,a.uint32());break;default:a.skipType(7&e);break}}return r},fromJSON(e){const n=Object.assign({},R);n.denomTrace=void 0!==e.denomTrace&&null!==e.denomTrace?h.DenomTrace.fromJSON(e.denomTrace):void 0;return n},toJSON(e){const n={};void 0!==e.denomTrace&&(n.denomTrace=e.denomTrace?h.DenomTrace.toJSON(e.denomTrace):void 0);return n},fromPartial(e){const n=Object.assign({},R);n.denomTrace=void 0!==e.denomTrace&&null!==e.denomTrace?h.DenomTrace.fromPartial(e.denomTrace):void 0;return n}};const D={};f.QueryDenomTracesRequest={encode(e,n=g.default.Writer.create()){void 0!==e.pagination&&T.PageRequest.encode(e.pagination,n.uint32(10).fork()).ldelim();return n},decode(e,n){const a=e instanceof g.default.Reader?e:new g.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},D);while(a.pos<t){const e=a.uint32();switch(e>>>3){case 1:r.pagination=T.PageRequest.decode(a,a.uint32());break;default:a.skipType(7&e);break}}return r},fromJSON(e){const n=Object.assign({},D);n.pagination=void 0!==e.pagination&&null!==e.pagination?T.PageRequest.fromJSON(e.pagination):void 0;return n},toJSON(e){const n={};void 0!==e.pagination&&(n.pagination=e.pagination?T.PageRequest.toJSON(e.pagination):void 0);return n},fromPartial(e){const n=Object.assign({},D);n.pagination=void 0!==e.pagination&&null!==e.pagination?T.PageRequest.fromPartial(e.pagination):void 0;return n}};const P={};f.QueryDenomTracesResponse={encode(e,n=g.default.Writer.create()){for(const a of e.denomTraces)h.DenomTrace.encode(a,n.uint32(10).fork()).ldelim();void 0!==e.pagination&&T.PageResponse.encode(e.pagination,n.uint32(18).fork()).ldelim();return n},decode(e,n){const a=e instanceof g.default.Reader?e:new g.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},P);r.denomTraces=[];while(a.pos<t){const e=a.uint32();switch(e>>>3){case 1:r.denomTraces.push(h.DenomTrace.decode(a,a.uint32()));break;case 2:r.pagination=T.PageResponse.decode(a,a.uint32());break;default:a.skipType(7&e);break}}return r},fromJSON(e){var n;const a=Object.assign({},P);a.denomTraces=(null!==(n=e.denomTraces)&&void 0!==n?n:[]).map((e=>h.DenomTrace.fromJSON(e)));a.pagination=void 0!==e.pagination&&null!==e.pagination?T.PageResponse.fromJSON(e.pagination):void 0;return a},toJSON(e){const n={};e.denomTraces?n.denomTraces=e.denomTraces.map((e=>e?h.DenomTrace.toJSON(e):void 0)):n.denomTraces=[];void 0!==e.pagination&&(n.pagination=e.pagination?T.PageResponse.toJSON(e.pagination):void 0);return n},fromPartial(e){var n;const a=Object.assign({},P);a.denomTraces=(null===(n=e.denomTraces)||void 0===n?void 0:n.map((e=>h.DenomTrace.fromPartial(e))))||[];a.pagination=void 0!==e.pagination&&null!==e.pagination?T.PageResponse.fromPartial(e.pagination):void 0;return a}};const k={};f.QueryParamsRequest={encode(e,n=g.default.Writer.create()){return n},decode(e,n){const a=e instanceof g.default.Reader?e:new g.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},k);while(a.pos<t){const e=a.uint32();switch(e>>>3){default:a.skipType(7&e);break}}return r},fromJSON(e){const n=Object.assign({},k);return n},toJSON(e){const n={};return n},fromPartial(e){const n=Object.assign({},k);return n}};const y={};f.QueryParamsResponse={encode(e,n=g.default.Writer.create()){void 0!==e.params&&h.Params.encode(e.params,n.uint32(10).fork()).ldelim();return n},decode(e,n){const a=e instanceof g.default.Reader?e:new g.default.Reader(e);let t=void 0===n?a.len:a.pos+n;const r=Object.assign({},y);while(a.pos<t){const e=a.uint32();switch(e>>>3){case 1:r.params=h.Params.decode(a,a.uint32());break;default:a.skipType(7&e);break}}return r},fromJSON(e){const n=Object.assign({},y);n.params=void 0!==e.params&&null!==e.params?h.Params.fromJSON(e.params):void 0;return n},toJSON(e){const n={};void 0!==e.params&&(n.params=e.params?h.Params.toJSON(e.params):void 0);return n},fromPartial(e){const n=Object.assign({},y);n.params=void 0!==e.params&&null!==e.params?h.Params.fromPartial(e.params):void 0;return n}};class QueryClientImpl{constructor(e){this.rpc=e;this.DenomTrace=this.DenomTrace.bind(this);this.DenomTraces=this.DenomTraces.bind(this);this.Params=this.Params.bind(this)}DenomTrace(e){const n=f.QueryDenomTraceRequest.encode(e).finish();const a=this.rpc.request("ibc.applications.transfer.v1.Query","DenomTrace",n);return a.then((e=>f.QueryDenomTraceResponse.decode(new g.default.Reader(e))))}DenomTraces(e){const n=f.QueryDenomTracesRequest.encode(e).finish();const a=this.rpc.request("ibc.applications.transfer.v1.Query","DenomTraces",n);return a.then((e=>f.QueryDenomTracesResponse.decode(new g.default.Reader(e))))}Params(e){const n=f.QueryParamsRequest.encode(e).finish();const a=this.rpc.request("ibc.applications.transfer.v1.Query","Params",n);return a.then((e=>f.QueryParamsResponse.decode(new g.default.Reader(e))))}}f.QueryClientImpl=QueryClientImpl;if(g.default.util.Long!==b.default){g.default.util.Long=b.default;g.default.configure()}const S=f.__esModule,Q=f.QueryParamsResponse,j=f.QueryParamsRequest,w=f.QueryDenomTracesResponse,E=f.QueryDenomTracesRequest,J=f.QueryDenomTraceResponse,N=f.QueryDenomTraceRequest,q=f.protobufPackage;const _=f.QueryClientImpl;export{_ as QueryClientImpl,N as QueryDenomTraceRequest,J as QueryDenomTraceResponse,E as QueryDenomTracesRequest,w as QueryDenomTracesResponse,j as QueryParamsRequest,Q as QueryParamsResponse,S as __esModule,f as default,q as protobufPackage};

